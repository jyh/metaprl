Import qw( env );

$env = $env->clone(
    INCPATH => [@{$env->{INCPATH}},
                "$env->{MP}/mllib",
                "$env->{MP}/lib",
                "$env->{MP}/refiner/refbase",
                "$env->{MP}/refiner/refsig",
                "$env->{MP}/refiner/term_gen",
                "$env->{MP}/refiner/term_ds",
                "$env->{MP}/refiner/term_std",
                "$env->{MP}/refiner/rewrite",
                "$env->{MP}/refiner/refiner",
                "$env->{MP}/refiner/reflib",
                "$env->{MP}/library",
                "$env->{MP}/ensemble",
                "$env->{MP}/filter/boot"],
    ENV => {
            PATH => "$ENV{'PATH'}:$env->{MP}/filter/filter",
            MPLIB => "$env->{MP}/lib",
            LC_ALL => "C"
    },
    OCAMLCFLAGS => "",
    OCAMLC => "prlc %PRLCFLAGS",

   # All files compiled with prlc implicitly depend on these files and
   # modules.
   HIDDEPS => "$env->{MP}/filter/filter/prlc $env->{MP}/lib/camlp4n $env->{MP}/lib/registry.txt $env->{MP}/lib/mbs-mpl.txt",
   HIDMODDEPS => "Printf Mp_debug Refiner Refine_exn Term Term_util Theory Dform Dform_print Tactic Mp_resource Precedence Filter_summary",
);

Export qw( env );

Build qw(
        tactic/Conscript
        ocaml/Conscript
        base/Conscript
        itt/Conscript
        mc/Conscript
);
