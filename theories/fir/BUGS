Mojave FIR Theory
BUGS
by Brian Emre Aydemir (emre@cs.caltech.edu)

Below, I have listed every bug in the Mojave FIR theory that I am
aware of.  They are listed in no particular order.  I have also listed,
at the end, things that might be considered bugs, but really aren't.


-- Cannot give a type for functions of zero arguments (see Mfir_ty!tyFun).
   In particular, Mfir_connect_ty will convert TyFun ([], t) to [[t]]
   instead of a tyFun term.

-- No terms are declared for subops.  If I implement these,
   perhaps they should go in their own file, e.g. Mfir_subop.

-- No terms are declared for the FIR object system, including tyCase,
   and tyObject.  These should go in Mfir_ty.

-- No terms are declared for the following unary operators:
      pointerOfBlockOp     lengthOfBlockOp
   These should go in Mfir_exp.  (They depend on subops.)

-- No term is declared for the binary operator plusPointerOp.
   It should go in Mfir_exp.  (It depends on subops.)

-- Connection code bugs:
      .  In many places, I assume the OCaml int type is
         31-bit, signed integers.
      .  I assume (raw) integer sets have closed bounds.


Things that might look like bugs, but really aren't
(see the README for further information):

-- The term tyDelayed is not declared.

-- The term atomFloat encodes the value as a string.

-- The term atomFun is declared.

-- No terms for debugging info in the FIR are declared.
