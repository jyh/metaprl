Mojave FIR Theory
README
by Brian Emre Aydemir (emre@cs.caltech.edu)

I have made every attempt to document the Mojave FIR theory.  A great
majority of the documentation can be found in the theories.pdf file
generated by running ``make latex''.  Any remaining documentation
is likely to be in the form of comments in .ml files.

---------------------------------------------------------------------------

The following remarks by Brian Emre Aydemir (emre) are intended to
serve as notes to himself.  They may not make sense to others.

-- Possible method for type checking FIR programs:
      1) Build up a context that has all the declarations we'll need.
      2) Type check the context.
      3) Type check each definition given the context.
   I have this sneaking suspicion that we're going to need type definitions
   as well.  Without them, I don't see how we can type-check values of
   a union type.

-- polyKind: At some point, I should try to simplify it.  It seems to be
   causing many rules to multiply into two cases when that does not
   necessarily have to be the case I think.

-- Documentation: I'll try to maintain it, but I will plan on doing a massive
   clean-up at the end of summer (right before classes start).

Notable differences from the actual Mojave FIR:

-- The following have been ``curried'' (since: lists are somewhat annoying
   to deal with in MetaPRL, can get better binding variables, ...):
      TyFun

Comments that will be around a while:

-- Display forms will be implmented with the philosophy, ``if it works for
   me, it must be good enough''.

-- Must _not_ include anything from ITT.  Otherwise, we get
   a soup of logical inconsistencies/differences.

-- Dropping anything that is related to the object system.
   It is unsound.  Also dropping anything not covered in the
   technical report.

-- MetaPRL theories are open, so we can not do induction over a set of
   rules.  In particular, there's no way we can formalize the proofs
   of the technical report without going through some trouble.
