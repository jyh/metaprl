THEORYNAME = itt
THEORYDESCR = Computational Type Theory

MLZFILES =

DIRS[] =
    core
    extensions
    applications
    reflection

if $(TESTS_ENABLED)
    DIRS[] += tests
    export

ITT_FILES[] =

.SUBDIRS: $(DIRS)
    include OMakefile
    ITT_FILES[] += $(file $(MPFILES))
    export ITT_FILES

MPFILES[] = $(ITT_FILES)

Theory($(MPFILES))

#
# Documentation
#
PRINT_THEORIES[] =
    itt_theory
    itt_equal
    itt_struct
    itt_squash
    itt_squiggle
    itt_subtype
    itt_void
    itt_unit
    itt_atom
    itt_set
    itt_union
    itt_rfun
    itt_dfun
    itt_dprod
    itt_prod
    itt_logic
    itt_decidable
    itt_bool
    itt_int_base
    itt_int_ext
    itt_int_arith
    itt_isect
    itt_disect
    itt_bisect
    itt_tunion
    itt_bunion
    itt_w
    itt_prec
    itt_srec
    itt_list
    itt_list2
    itt_esquash
    itt_quotient
    itt_struct2
    itt_fun2
    itt_well_founded
    itt_singleton
    itt_subset
    itt_subset2
    itt_antiquotient
    itt_record
    itt_record_exm
    itt_record_renaming
    itt_relation_str
    itt_set_str
    itt_bintree
    itt_datatree
    itt_sortedtree
    itt_rbtree
    itt_grouplikeobj
    itt_group
    itt_cyclic_group
    itt_quotient_group
    itt_ring2
    itt_ring_e
    itt_poly
    itt_unitring
    itt_ring_uce
    itt_intdomain
    itt_intdomain_e
    itt_field2
    itt_field_e
    itt_order
    itt_rat
    itt_collection
    itt_pointwise
    itt_pointwise2
    itt_hoas_base
    itt_hoas_vector
    itt_hoas_debruijn
    itt_hoas_operator
    itt_hoas_destterm
    itt_hoas_lang
    itt_hoas_bterm

TheoryDocumentInstall(itt, $(PRINT_THEORIES))

#
# Clean up
#
clean:
    $(CLEAN) theory.tex theory-body.tex theory_print.ml

all: theory$(LIB_SUFFIX)
