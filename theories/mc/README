Maintainer of this theory: Brian Emre Aydemir (emre@its.caltech.edu)
Last update to this file: 20 November 2001

Brief module descriptions:
--------------------------------------------------------------------------
mc_term_op_ds - Basic term operations beyond what's provided in
   Refiner.Refiner.TermOp for working with terms in this theory.
fir_int_set - Basic FIR integer set.
fir_rawint_set - Basic FIR raw integer set.
fir_ty - Terms and display forms for FIR types.
fir_exp - Terms and display forms for FIR expressions.
fir_eval - Defines how an FIR term-structure should evaluate.
fir_deadcode - Deadcode elimination on an FIR term-structure.
fir_const_elim - Constant elimination on an FIR term-structure.
fir_marshal - Convertes between an Fir.prog and MetaPRL term-structure.
mc_theory - Pulls together all of the above files for convinience.
fir_test - Contains test sequents.  Not comprehensive or actively maintained.
fir_type* - Not actively maintained.  I think these were supposed to have
   rules that determined what constituted a well-typed expression.

General overview:
--------------------------------------------------------------------------

The purpose of this theory is to provide a formal representation of the
Mojave compiler's FIR.

Todo list:
--------------------------------------------------------------------------
- Term construction / deconstruction operators for int_set and rawint_set.
- Clean up mc_term_op_ds, esp. with regard to error handling and messages.
- Get semantics for union / allocation / type-construction ops.
- Make a comprehensive test file.
- fir_deadcode - get dead parameter and function removal working.
- fir_exp - Atomic, Debug, and Migrate term are missing.  I should
   at least declare these or something.

Notes to myself:
--------------------------------------------------------------------------
