Maintainer of this theory: Brian Emre Aydemir (emre@its.caltech.edu)
Last update to this file: 28 January 2002

This file lists what I have remaining to do to complete this theory,
and some other miscellaneous notes to myself.

Todo list:
--------------------------------------------------------------------------
-  Improve display forms: they work, but they could look nicer.
   Specifically, fix Fir_exp and Fir_eval once I understand allocation,
   unions, etc. Fir_ty might also need looking at.
-  Make a comprehensive test file: probably a bunch of sequents with
   a .prla file to store the proofs.  Useful as a check to see if I
   break anything.  Add this .prla file to the repository.
-  Fir_deadcode: dead function paramater and dead function elimination
   would be quite nice to have.
-  FIR modelling: I need a better understanding / implementation (e.g.
   Fir_eval), of such things as union, allocation, type construction, etc.
   Once I have this, I can actually update Fir_eval to be complete...
   I can also update the appropriate docs...
-  Fir_eval: re-export .prla sometime to solve copy_proof errors.
-  Mc_fir_connect*: Debugging runs, and lots of them, need to be performed.
   I should do this once I settle other issues with my FIR
   representation.
-  Fir_exp: debugging display forms, and term operations.
-  Finish the README file.
-  The tests: sets and symbols still need work...

-  ACK! Update everything to match the new FIR.
   Reorganize code so as to make all the term construction and
   deconstruction functions less of a hassle to modify and edit.


Notes to myself (things to do, but only if I feel so inclined):
--------------------------------------------------------------------------
-  building with cons breaks the "up-arrow" thingy in mpopt.
-  get the Conscript's to be more intelligent (e.g. read mk/config).
   they also don't catch all dependencies (hard to describe this problem).
-  clean up the Conscript in this theory.
-  Understand all of MetaPRL code.  Clean it up where possible.
   .  Not needed?:
         mllib/register
         mllib/marshal_buf
         mllib/bitset
-  Get a better understanding of MC code.
   .  What the heck is geoff's home dir doing in lib/cutil/Conscript
-  "open Bad_module" doesn't seme to be caught by prlc.
-  ensemble/thread_refiner.mli or somethign... wants to be a .mlz
-  is the naml front-end working?

Scratch space (random thoughts to myself):
--------------------------------------------------------------------------
I think for now I'll just make some functions that take various
slots in a Fir.prog and turn them into "TermTable"s.  Won't
really be useful as a final solution, but it should work for
testing (I hope).
